/*
 * i2c.h
 *
 *  Created on: Sep 26, 2017
 *      Author: toni
 */

#ifndef SRC_I2C_H_
#define SRC_I2C_H_

#include "xparameters.h"
#include "xiic.h"
#include "xintc.h"
#include "xil_exception.h"
#include "xil_printf.h"

class I2Cdev {
public:
	I2Cdev();

	static int8_t readBit(u8 devAddr, u8 regAddr, u8 bitNum, u8 *data);
	static int8_t readBitW(u8 devAddr, u8 regAddr, u8 bitNum, uint16_t *data);
	static int8_t readBits(u8 devAddr, u8 regAddr, u8 bitStart, u8 length, u8 *data);
	static int8_t readBitsW(u8 devAddr, u8 regAddr, u8 bitStart, u8 length, uint16_t *data);
	static int8_t readByte(u8 devAddr, u8 regAddr, u8 *data);
	static int8_t readWord(u8 devAddr, u8 regAddr, uint16_t *data);
	static int8_t readBytes(u8 devAddr, u8 regAddr, u8 length, u8 *data);
	static int readWords(u8 devAddr, u8 regAddr, u8 length, uint16_t *data);

	static bool writeBit(u8 devAddr, u8 regAddr, u8 bitNum, u8 data);
	static bool writeBitW(u8 devAddr, u8 regAddr, u8 bitNum, uint16_t data);
	static bool writeBits(u8 devAddr, u8 regAddr, u8 bitStart, u8 length, u8 data);
	static bool writeBitsW(u8 devAddr, u8 regAddr, u8 bitStart, u8 length, uint16_t data);
	static bool writeByte(u8 devAddr, u8 regAddr, u8 data);
	static bool writeWord(u8 devAddr, u8 regAddr, uint16_t data);
	static bool writeBytes(u8 devAddr, u8 regAddr, u8 length, u8 *data);
	static bool writeWords(u8 devAddr, u8 regAddr, u8 length, uint16_t *data);

	static uint16_t readTimeout;
	virtual ~I2Cdev();
};

#endif /* SRC_I2C_H_ */
